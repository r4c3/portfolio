import { useState, useContext } from 'react'

import { ThemeContext } from './Contexts';

export default function ThemeLink({which}) {
  const { isLightMode, setIsLightMode } = useContext(ThemeContext)
  const [hover, setHover] = useState(false);

  const handleMouseEnter = () => {
    setHover(true);
  }
  const handleMouseLeave = () => {
    setHover(false);
  }

  const toggleIsLightMode = () => {
    setIsLightMode(isLightMode ? false : true)
  }

  const styles = {
    a: {
      display: 'flex',
      alignItems: 'center'
    },
    icon: {
      color: hover ? 'var(--ac)' : 'var(--wt)',
      transition: '0.3s ease all',
      cursor: 'pointer',
    }
  }

  switch (which) {
    case "GitHub":
      return ( //* GitHub SVG Icon
        <a style={styles.a} href="https://github.com/r4c3" target="_blank" rel="noreferrer">
          <svg width="2.7em" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} style={styles.icon} viewBox="0 0 32 32">
            <path fill="currentColor" d="M29.3839 9.88468C29.7301 8.84591 29.9034 7.76908 29.9034 6.65379C29.9034 5.16656 29.5761 3.76905 28.9224 2.4614C27.5509 2.4614 26.3394 2.71162 25.2878 3.21148C24.2368 3.71146 23.0381 4.48707 21.6924 5.5383C20.0002 5.1281 18.2048 4.923 16.3078 4.923C14.2307 4.923 12.2499 5.1475 10.3654 5.59616C8.99378 4.51913 7.78223 3.7277 6.73093 3.22118C5.67963 2.71466 4.46176 2.46146 3.07705 2.46146C2.42322 3.76912 2.09634 5.1667 2.09634 6.65386C2.09634 7.78215 2.26931 8.87191 2.61552 9.923C0.871728 11.9616 0 14.4999 0 17.5385C0 20.2054 0.397269 22.327 1.19228 23.9041C1.61548 24.7371 2.16659 25.4743 2.84615 26.1156C3.52544 26.7564 4.30112 27.276 5.17298 27.6735C6.04498 28.0706 6.92297 28.401 7.80769 28.6636C8.69235 28.9263 9.66983 29.1188 10.7404 29.2401C11.8109 29.3624 12.7564 29.4424 13.5768 29.4812C14.3973 29.5191 15.3074 29.5386 16.3077 29.5386C17.487 29.5386 18.5572 29.5095 19.5192 29.4522C20.4808 29.3946 21.5799 29.2533 22.8172 29.0295C24.0543 28.805 25.1442 28.5002 26.0867 28.1158C27.029 27.7313 27.9331 27.1799 28.7984 26.4621C29.6637 25.7439 30.3398 24.8915 30.8272 23.9042C31.6089 22.3144 32.0001 20.1924 32.0001 17.5385C31.9996 14.4871 31.1278 11.936 29.3839 9.88468ZM27.077 23.8748C26.6666 24.7148 26.1473 25.3745 25.5192 25.8558C24.8909 26.3366 24.1089 26.7211 23.1731 27.0099C22.2369 27.2983 21.3399 27.4873 20.4808 27.5767C19.6215 27.6666 18.6667 27.7113 17.6151 27.7113H14.3843C13.3331 27.7113 12.3778 27.6666 11.5189 27.5767C10.66 27.4873 9.76258 27.2983 8.8266 27.0099C7.89095 26.7211 7.10901 26.3366 6.48064 25.8558C5.85227 25.3744 5.33308 24.7148 4.92282 23.8748C4.51262 23.0348 4.30745 22.0511 4.30745 20.923C4.30745 19.3841 4.74978 18.0762 5.63451 16.9998C6.51917 15.9228 7.71777 15.3845 9.23047 15.3845C9.78198 15.3845 11.032 15.519 12.9807 15.7883C13.8909 15.9292 14.8974 15.9998 15.9998 15.9998C17.1026 15.9998 18.1089 15.9294 19.019 15.7883C20.9937 15.5189 22.2433 15.3845 22.7693 15.3845C24.2819 15.3845 25.4805 15.923 26.3651 16.9998C27.2499 18.0767 27.6919 19.3841 27.6919 20.923C27.6919 22.0513 27.4868 23.0355 27.077 23.8748Z"/>
            <path fill="currentColor" d="M11.2401 17.8845C10.849 17.4483 10.3845 17.2303 9.84589 17.2303C9.30718 17.2303 8.84255 17.4486 8.45155 17.8845C8.06074 18.3201 7.78492 18.8075 7.62475 19.3454C7.46424 19.8844 7.38422 20.4099 7.38422 20.923C7.38422 21.4356 7.46444 21.9612 7.62475 22.5001C7.78472 23.0383 8.06041 23.5254 8.45155 23.961C8.84275 24.3971 9.30718 24.6152 9.84589 24.6152C10.3845 24.6152 10.8492 24.3967 11.2401 23.961C11.631 23.5253 11.9067 23.0383 12.0669 22.5001C12.2272 21.9612 12.3074 21.4356 12.3074 20.923C12.3074 20.4104 12.2274 19.8844 12.0669 19.3454C11.9067 18.8077 11.6312 18.3205 11.2401 17.8845Z"/>
            <path fill="currentColor" d="M23.5479 17.8845C23.157 17.4483 22.6923 17.2303 22.1538 17.2303C21.6156 17.2303 21.1506 17.4486 20.7595 17.8845C20.3685 18.3201 20.0929 18.8075 19.9329 19.3454C19.7723 19.8844 19.6921 20.4099 19.6921 20.923C19.6921 21.4356 19.7723 21.9612 19.9329 22.5001C20.0929 23.0383 20.3686 23.5254 20.7595 23.961C21.1507 24.3971 21.6156 24.6152 22.1538 24.6152C22.6923 24.6152 23.157 24.3967 23.5479 23.961C23.9386 23.5253 24.2145 23.0383 24.3749 22.5001C24.5351 21.9612 24.6153 21.4356 24.6153 20.923C24.6153 20.4104 24.5351 19.8844 24.3749 19.3454C24.2145 18.8077 23.9386 18.3205 23.5479 17.8845Z"/>
          </svg>
        </a>
      );
    case "ToggleTheme":
      return ( //* ToggleTheme SVG Icon
        <svg width="2.23em" onClick={toggleIsLightMode} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} style={styles.icon} viewBox="0 0 32 32">
          <path fill="currentColor" d="M12.7761 0.330741C13.3412 0.213553 13.9063 0.13022 14.4636 0.0755325C15.0365 0.020845 15.6042 -0.00519665 16.1641 1.16875e-05C16.4792 0.00261585 16.7318 0.260428 16.7292 0.575533C16.7266 0.81772 16.5729 1.02345 16.3594 1.10418C13.9766 2.04168 12.0703 3.78907 10.9011 5.95314C9.75002 8.08074 9.31252 10.6094 9.83595 13.1615L9.83856 13.1797C10.4349 16.0599 12.138 18.4271 14.4167 19.9271C16.6927 21.4271 19.5391 22.0573 22.4193 21.4688L22.4375 21.4662C24.5104 21.0365 26.3151 20.0365 27.724 18.6589C29.1823 17.2344 30.2136 15.4089 30.6745 13.4089C30.7448 13.1016 31.0521 12.9115 31.3568 12.9818C31.5886 13.0365 31.7552 13.224 31.7917 13.4453C32.4792 17.6641 31.4401 21.7969 29.1719 25.0886C26.9141 28.3646 23.4349 30.8099 19.2292 31.6745C14.9011 32.5651 10.6224 31.6172 7.20314 29.3672C3.78126 27.1094 1.22137 23.5547 0.330743 19.2266C-0.539049 15 0.343764 10.8203 2.48178 7.44272C4.63022 4.0547 8.04168 1.46876 12.2162 0.455741C12.2969 0.434908 12.3906 0.414074 12.4922 0.390637H12.4948L12.7761 0.330741Z"/>
        </svg>

      );
    case "LinkedIn":
      return ( //* LinkedIn SVG Icon
        <a style={styles.a} href="https://linkedin.com/in/r4c3" target="_blank" rel="noreferrer">
          <svg width="2.38em" onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave} style={styles.icon} viewBox="0 0 32 32">
            <path fill="currentColor" d="M0 3.55215C0 2.52253 0.360371 1.67311 1.08108 1.00389C1.80179 0.334641 2.73875 3.05176e-05 3.89189 3.05176e-05C5.02446 3.05176e-05 5.94079 0.329482 6.64093 0.988448C7.36164 1.66798 7.72201 2.55342 7.72201 3.64482C7.72201 4.63324 7.37195 5.4569 6.67181 6.11586C5.9511 6.7954 5.00386 7.13517 3.83012 7.13517H3.79923C2.66666 7.13517 1.75033 6.7954 1.05019 6.11586C0.350054 5.43632 0 4.58174 0 3.55215ZM0.401544 30.5792V9.94598H7.25869V30.5792H0.401544ZM11.0579 30.5792H17.9151V19.0579C17.9151 18.3372 17.9974 17.7812 18.1622 17.39C18.4504 16.6899 18.888 16.0978 19.4749 15.6139C20.0618 15.13 20.7979 14.8881 21.6834 14.8881C23.9897 14.8881 25.1429 16.4427 25.1429 19.5522V30.5792H32V18.7491C32 15.7014 31.2793 13.39 29.8378 11.8147C28.3964 10.2394 26.4916 9.45177 24.1236 9.45177C21.4672 9.45177 19.3977 10.5946 17.9151 12.8803V12.9421H17.8842L17.9151 12.8803V9.94598H11.0579C11.0991 10.6049 11.1197 12.6538 11.1197 16.0927C11.1197 19.5316 11.0991 24.3604 11.0579 30.5792Z"/>
          </svg>
        </a>
      );
    default:
      console.error("An invalid { where } prop was passed.")
  }
}